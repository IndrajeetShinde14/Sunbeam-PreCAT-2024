
/* 

//What should be the output of the following code?
//if file contents following data in sunbeam.txt
//[Sunbeam DMC DITISS DAC DBDA DESD]
#include <stdio.h>
int main(void)
{
FILE *fp=NULL;
char c[1024];
fp = fopen("sunbeam.txt", "r"); // open file in read mode 
fseek(fp, 0, SEEK_END); 
fseek(fp, -22L, SEEK_CUR);
fgets(c, 11 , fp);
puts(c);
fclose(fp); 
return 0;
}
// A. prints "C DITISS D"
// B. prints " DITISS DA"
// C. prints garbage value
// D. prints "DITISS DAC"

//Answer: A

/*
        Sunbeam DMC DITISS DAC DBDA DESD
        fseek(fp, 0, SEEK_END); => file pointer goes to end i.e character D

        fseek(fp, -22L, SEEK_CUR);
        //file pointer is at D -22L will reposition the file pointer 
        22 pos behind from currenct position 
        file pointer shifted to C from DMC 

        fgets(c, 11 , fp); 
        //fgets returns n-1 characters 
        //so reads 11 characters and returns 10 from character C 
        //adds null character at the end 
        //i.e C DITISS DA
        //returns 10 so o/p is C DITISS D 



*/ 

//************************************************************

//Q3. 
/* 
#include <stdio.h>
int main(void)
{
    unsigned int num;
    int i;
    FILE *fp = NULL;
    printf("\n Enter Num ::");
    scanf("%u", &num);
    fp = fopen("num.txt", "w");
    if (fp != NULL)
    {
        for (i = 0; i < 8; i++)
        {
            fprintf(fp, "%d", (num << i & 1 << 7) ? 1 : 0);
        }
        fclose(fp);
    }
    else
        printf("\n unable to deal with fiile");
    return 0;
}
/* 
/*
    i=0 to 7 
    num = 9 
    (num << i & 1 << 7) ? 1 : 0

    1.i = 0 
      (num << i & 1 << 7 ) ? 1 : 0
        9  << 0 & 1 << 7 )   
           0    &  128 
              0 
           0 ? 1 : 0 
           prints 0    
    
    2.i = 1 
      (num << i & 1 << 7 ) ? 1 : 0
        9  << 1 & 1 << 7 )   
           18   &  128 
              0 
         0 ? 1 : 0
         prints 0       
      
    3. i = 2 
    (num << i & 1 << 7 ) ? 1 : 0
        9  << 2 & 1 << 7 )   
           36   &  128 
              0 
         0 ? 1 : 0
         prints 0    

     4. i = 3 
    (num << i & 1 << 7 ) ? 1 : 0
        9  << 3 & 1 << 7 )   
           72   &  128 
              0 
         0 ? 1 : 0
         prints 0   

    4. i = 4 
    (num << i & 1 << 7 ) ? 1 : 0
        9  << 4 & 1 << 7 )   
           144  &  128 
              128 
         128 ? 1 : 0
         prints 1                 

*/
// A. 00001000
// B. 00001001
// C. 10010000
// D. 10000000
// E. Error
// Answer: B
//**********************************************************

/* 
4.#include<stdio.h>
int main()
{
FILE *fpRead=NULL;
char ch;
fpRead = fopen("myfile.c", "r");
if(fpRead=NULL) // you have used assignment operator assigning NULL to fpread 
// instead you should use fpRead == NULL 
//runtime error  
printf("\n unable to read data from file");
else
{
while((ch=fgetc(fpRead))!=EOF)
printf("%c", ch);
fclose(fpRead);
}
return 0;
}
A. Print the contents of file "myfile.c"
B. Print the contents of file "myfile.c" upto NULL character
C. Infinite loop
D. Run time error
E. unable to read data from file
Answer: D

*/

/*  

#include <stdio.h>
int main( void )
{
fprintf(stdout," %d", fprintf(stdout,"%s", "Sunbeam Pune and Karad"));
//nested fprintf returns count of Sunbeam Pune and Karad i.e 22 
//so right to left Sunbeam Pune and Karad is printed first 
//22 is returned to outer fprintf and 22 printed on stdout 
//stdout represents the monitor
//22 is printed on terminal 
// o/p is Sunbeam Pune and Karad 22

return 0;
}

*/ 